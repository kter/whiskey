"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'django-insecure-r^x0v^(0vr@aegvw$083blf1z1x+^5=2jh8s(64ucq9f1&gtvu')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DJANGO_DEBUG', 'True').lower() == 'true'

ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'dynamodb_sessions',
    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'api.middleware.CognitoAuthMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database - DynamoDBを使用するためDatabasesは最小設定
# セッション用の最小限のデータベース設定
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ':memory:',  # メモリ上のSQLite（セッション用）
    }
}

# Session Configuration - デフォルトのデータベースセッション使用
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
SESSION_COOKIE_AGE = 86400  # 24 hours
SESSION_SAVE_EVERY_REQUEST = True

# DynamoDB Session Settings
DYNAMODB_SESSIONS_TABLE_NAME = 'django_session'
DYNAMODB_SESSIONS_TABLE_HASH_ATTRIB_NAME = 'session_key'
DYNAMODB_SESSIONS_ALWAYS_CONSISTENT = True

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS settings
CORS_ALLOW_ALL_ORIGINS = True  # For development only
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
]

# AWS Settings
AWS_REGION = os.getenv('AWS_REGION', 'ap-northeast-1')
AWS_S3_BUCKET = os.getenv('AWS_S3_BUCKET', 'whiskey-reviews')
AWS_ENDPOINT_URL = os.getenv('AWS_ENDPOINT_URL')  # LocalStack用
COGNITO_USER_POOL_ID = os.getenv('COGNITO_USER_POOL_ID', 'ap-northeast-1_xxxxxxxx')
COGNITO_CLIENT_ID = os.getenv('COGNITO_CLIENT_ID', 'xxxxxxxxxxxxxxxxxxxxxxxxxx')

# DynamoDB Session Settings (AWS設定の後に配置)
DYNAMODB_SESSIONS_AWS_REGION = AWS_REGION
if AWS_ENDPOINT_URL:
    # LocalStack環境
    DYNAMODB_SESSIONS_AWS_ACCESS_KEY_ID = 'dummy'
    DYNAMODB_SESSIONS_AWS_SECRET_ACCESS_KEY = 'dummy'
    DYNAMODB_SESSIONS_AWS_DYNAMODB_ENDPOINT_URL = AWS_ENDPOINT_URL
else:
    # 本番AWS環境では環境変数やIAMロールから認証情報を取得
    pass

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
}

# DynamoDBの設定
DYNAMODB_SETTINGS = {
    'region_name': AWS_REGION,
    'endpoint_url': AWS_ENDPOINT_URL,  # LocalStack環境では設定される
}
